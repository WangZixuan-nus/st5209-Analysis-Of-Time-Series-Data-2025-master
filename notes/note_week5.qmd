---
title: "Week 5 Demonstration"
format: html
editor: visual
---

## Set up

```{r}
#| message: FALSE
library(fpp3)
library(tidyverse)
library(slider)
```

# pre-reading

A time series dominated by trend

```{r}
globtemp <- readRDS("D:/AAnus/semester2/ST5209X Analysis Of Time Series Data/st5209-2025-master/_data/cleaned/globtemp.rds")
globtemp |> 
    as_tsibble() |>
    autoplot()
```

Compute ACF values: use ACF() function

```{r}
globtemp |>
  as_tsibble() |>
  ACF(type = "covariance")
```

Compute ACVF:

```{r}
globtemp |>
  as_tsibble() |>
  ACF(type = "correlation")
```

ACF plot(autocorrelation plot)

```{r}
globtemp |> 
    as_tsibble() |>
    ACF() |>
    autoplot()
```

Take a first difference

```{r}
globtemp |> 
    as_tsibble() |>
    mutate(TempIncr = difference(value)) |>
    ACF(TempIncr) |>
    autoplot()
```

A time series dominated by seasonality:

-   TIME plot:

```{r}
vic_elec |>
    filter(year(Time) == 2013, month(Time) %in% c(1,2)) |> 
    model(
        STL(Demand ~ trend() + season(period = 48))) |> 
        components() |>
        autoplot(season_48)
```

-   ACF PLOT:

```{r}
vic_elec |>
    filter(year(Time) == 2013, month(Time) %in% c(1,2)) |> 
    model(
        STL(Demand ~ trend() + season(period = 48))) |> 
        components() |> 
        ACF(season_48, lag_max = 72) |> 
        autoplot()
```

A time series dominated by cycles:

-   Time plot

```{r}
pelt |> 
    autoplot(Lynx)
```

Seasonal plot

```{r}
pelt |> 
  as_tsibble()|>
  gg_custom_season(Lynx, period = 10)

```

ACF plot

```{r}
pelt |> 
    ACF(Lynx, lag_max = 40) |>
    autoplot()
```

ACF values

```{r}
aus_arrivals |>
    features(Arrivals, feat_acf)
```

## 8.3 Cross-correlation

```{r}
pelt |> CCF(x = Lynx, y = Hare) |> autoplot()
```

## **8.4 Decomposition statistics**

```{r}
aus_arrivals |> 
    features(Arrivals, feat_stl)
```

```{r}
aus_arrivals |> gg_season()
```

## **8.5 Other statistics**

```{r}
aus_arrivals |> 
    features(Arrivals, feature_set(pkgs = "feasts"))
```

## **9.3 Periodogram**

example: **Star magnitude**

Time plot

```{r}
library(astsa)
star |>
    as_tsibble() |>
    rename(Day = index, Value = value) |>
    autoplot() + labs(y = "Star magnitude")
```

periodogram

```{r}
star |>
    periodogram(max_freq = 0.08)
```

example: **Lynx furs**

time plot

```{r}
pelt |>
    autoplot(Lynx)
```

periodogram

```{r}
pelt$Lynx |>
    periodogram(max_freq = 0.5)
```

example:**US retail employment**

```{r}
us_retail_employment <- us_employment |>
  filter(year(Month) >= 1990, Title == "Retail Trade") |>
  select(-Series_ID, -Title) 
```

```{r}
us_retail_employment|>
  model(STL(Employed)) |>
  components() |>
  autoplot()
```

```{r}
us_retail_employment |>
    model(STL(Employed)) |>
    components() |> 
    mutate(trend_adjust = Employed - trend) |> 
    pluck("trend_adjust") |> 
    periodogram()
```

# CLASS

## 1. White noise and ACF plots

Create a time series of length 200 comprising i.i.d. standard Gaussian measurements. Make a time plot of the time series as well as an ACF plot. Compare this with the remainder term from an STL decomposition of `aus_arrivals_jap`. What do you observe?

```{r}
wn <- tibble(t = 1:200,
             y = rnorm(200))|>
  as_tsibble(index = t)

wn |> autoplot()
```

```{r}
wn |> ACF(y)|>
  autoplot()
```

```{r}
aus_arrivals |>
  filter(Origin == "Japan")|>
  model(STL(Arrivals))|>
  components()|>
  autoplot(remainder)
```

```{r}
aus_arrivals |>
  filter(Origin == "Japan")|>
  model(STL(Arrivals))|>
  components()|>
  ACF(remainder)|>
  autoplot()
```

## 2. Summary statistics

Glance through the summary statistics described in [Chapter 4.4](https://otexts.com/fpp3/other-features.html) of Hyndman and Athanasopoulos (2021). What do the following summary statistics compute?

-   Strength of trend
-   Strength of seasonality
-   `shift_level_max`
    -   finds the largest mean shift between two consecutive sliding windows of the time series. This is useful for finding sudden jumps or drops in a time series.
-   `shift_level_index`
    -   gives the index at which the largest mean shift occurs.
-   `var_tiled_var`
    -   gives the variances of the “tiled variances” (i.e., the variances of consecutive non-overlapping blocks of observations). This is sometimes called the “lumpiness” feature.

        ![](lumpiness%20Time%20series.png){width="500"}

When would they be useful?

## 3. EDA with summary statistics

The follow code snippet generates summary statistics for the various time series in the `tourism` dataset.

```{r}
#| eval: FALSE
#compute features 
tourism_features <- tourism |>
  features(Trips, feature_set(pkgs = "feasts"))
```

information of this time series goes

Make a scatter plot of seasonal strength against trend strength and color the points according to `Purpose`. What can you tell from the plot?

```{r}
tourism_features|>
  ggplot()+
  geom_point(aes(x = trend_strength, y = seasonal_strength_year, color = Purpose))+
  labs(title = "Seasonal Strength vs. Trend Strength",
       x = "Trend Strength",
       y = "Seasonal Strength",
       color = "Purpose") +
  theme_minimal()
```

Travel for holiday is more seasonal.

```{r}
library(broom)
pcs <- tourism_features |>
  select(-State,-Region,-Purpose) |>
  prcomp(scale = TRUE) |>
  augment(tourism_features) 

pcs |>
  ggplot(aes(x = .fittedPC1, y = .fittedPC2, col = Purpose))+
           geom_point() +
           theme(aspect.ratio=1)
```

Perform PCA on the `tourism_features` dataframe and make a scatter plot of the first two PCs. What do you observe?

```{r}
pcs|>
  filter(.fittedPC1 > 10) |>
  left_join(tourism) |>
  as_tsibble(index = Quarter, key = c(Region, State, Purpose)|>
               ggplot() +
               geom_line(aes(x = Quarter,y = Trips))+
               facet_wrap(~ Region)
```

## 4. Seasonal periods and frequencies

Consider the time series $(y_t)$ generated using the following code snippet.

```{r}
y_dat <- tibble(t = 1:100,
       y = t %% 10) |>
  as_tsibble(index = t)
y_dat |> autoplot()
```

we care about amplitude.

```{r}
require(rlang)

gg_custom_season <- function(data, y, period, start = 1) {
  # Make a seasonal plot with period specified in integer
  # start argument specifies the row number that will be the first season
  # in the period
  y <- enquo(y)
  data |>
    mutate(Season = (row_number() - start) %% period + start,
           Iteration = as.factor((row_number() - start) %/% period + 1)) |>
    ggplot(aes(x = Season, y = !!y, color = Iteration)) +
    geom_line()
}
```

```{r}
periodogram <- function(x, max_freq = 0.5)
periodogram(y_dat$y)
```

Plot a periodogram for $(y_t)$. What periods do the peaks correspond to? Why are there multiple peaks when $(y_t)$ was defined using a seasonal period of 10?

```{r}
us_retail_employment <- us_employment |>
  filter(year(Month) >= 1990, Title== "Retail Trade") |>
  select(-Series_ID, -Title)

us_retail_employment|>
  autoplot(Employed)

us_retail_employment |>
  model(STL(Employed)) |>
  components|>
  mutate(detrend = Employed - trend) |>
  pull(detrend)|>
  periodogram()
```

## 5. Periodogram and filters

Consider tourist arrivals to Australia from the UK, contained in the `aus_arrivals` dataset.

A yearly seasonality -\> period = 4

```{r}
aus_arrivals |>
  filter(Origin== "UK") |>
  autoplot()
```

we did not remove the trend, so the periodogram represent a trend.

a.  Plot a periodogram for the time series of arrivals from UK. Where are the peaks?

    Do a low- ???? to a time series before moving windows. The overall trend stays the same, but the frequency is

    low-ordered seasonality disappears, high frequency stay.

b.  a moving average of window size 4 to the time series. What happens to the periodogram?

c.  Apply a difference transformation to the time series. What happens to the periodogram?
